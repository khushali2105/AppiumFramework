<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-22T15:33:30 EDT" name="Suite" finished-at="2024-05-22T15:36:12 EDT" duration-ms="162119">
    <groups>
    </groups>
    <test started-at="2024-05-22T15:33:30 EDT" name="AndroiTest" finished-at="2024-05-22T15:36:12 EDT" duration-ms="162119">
      <class name="org.androidApp.eCommerce_TC_1">
        <test-method is-config="true" signature="ConfigureAppium()[pri:0, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:33:30 EDT" name="ConfigureAppium" finished-at="2024-05-22T15:33:41 EDT" duration-ms="10749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfigureAppium -->
        <test-method is-config="true" signature="preSetUp()[pri:0, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:33:41 EDT" name="preSetUp" finished-at="2024-05-22T15:33:41 EDT" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetUp -->
        <test-method signature="FillFormWithoutNameField(java.util.HashMap)[pri:1, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:33:41 EDT" name="FillFormWithoutNameField" data-provider="getData" finished-at="2024-05-22T15:33:43 EDT" duration-ms="1457" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=SAPNA, product2=Nike SFB Jungle, country=Canada, product1=Converse All Star, gender=female}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.pagefactory.ElementInterceptor.getObject(ElementInterceptor.java:42)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.call(InterceptorOfASingleElement.java:79)
at io.appium.java_client.proxy.Interceptor.intercept(Interceptor.java:78)
at org.openqa.selenium.remote.RemoteWebElement$ByteBuddy$zmM2EUqT.sendKeys(Unknown Source)
at org.PageObject.Android.FormPage.setNameField(FormPage.java:65)
at org.androidApp.eCommerce_TC_1.FillFormWithoutNameField(eCommerce_TC_1.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillFormWithoutNameField -->
        <test-method is-config="true" signature="preSetUp()[pri:0, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:33:43 EDT" name="preSetUp" finished-at="2024-05-22T15:33:43 EDT" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetUp -->
        <test-method signature="FillFormWithoutNameField(java.util.HashMap)[pri:1, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:33:43 EDT" name="FillFormWithoutNameField" data-provider="getData" finished-at="2024-05-22T15:33:44 EDT" duration-ms="746" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=VIRAL, product2=Nike Blazer Mid '77, country=India, product1=Air Jordan 4 Retro, gender=male}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.appium.java_client.pagefactory.ElementInterceptor.getObject(ElementInterceptor.java:42)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.call(InterceptorOfASingleElement.java:79)
at io.appium.java_client.proxy.Interceptor.intercept(Interceptor.java:78)
at org.openqa.selenium.remote.RemoteWebElement$ByteBuddy$zmM2EUqT.sendKeys(Unknown Source)
at org.PageObject.Android.FormPage.setNameField(FormPage.java:65)
at org.androidApp.eCommerce_TC_1.FillFormWithoutNameField(eCommerce_TC_1.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillFormWithoutNameField -->
        <test-method is-config="true" signature="preSetUp()[pri:0, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:33:44 EDT" name="preSetUp" finished-at="2024-05-22T15:33:44 EDT" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetUp -->
        <test-method signature="FillFormWithNameField(java.util.HashMap)[pri:2, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:33:44 EDT" name="FillFormWithNameField" data-provider="getData" finished-at="2024-05-22T15:34:56 EDT" duration-ms="71933" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=SAPNA, product2=Nike SFB Jungle, country=Canada, product1=Converse All Star, gender=female}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillFormWithNameField -->
        <test-method is-config="true" signature="preSetUp()[pri:0, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:34:56 EDT" name="preSetUp" finished-at="2024-05-22T15:34:56 EDT" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetUp -->
        <test-method signature="FillFormWithNameField(java.util.HashMap)[pri:2, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:34:56 EDT" name="FillFormWithNameField" data-provider="getData" finished-at="2024-05-22T15:36:12 EDT" duration-ms="76116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{name=VIRAL, product2=Nike Blazer Mid '77, country=India, product1=Air Jordan 4 Retro, gender=male}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillFormWithNameField -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.androidApp.eCommerce_TC_1@47c81abf]" started-at="2024-05-22T15:36:12 EDT" name="tearDown" finished-at="2024-05-22T15:36:12 EDT" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.androidApp.eCommerce_TC_1 -->
    </test> <!-- AndroiTest -->
  </suite> <!-- Suite -->
</testng-results>
